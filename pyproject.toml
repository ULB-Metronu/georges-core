[tool.pytest.ini_options]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::FutureWarning:"
]
addopts = "--doctest-modules --ignore=externals --ignore=docs"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310']
string_normalization = true
magic_trailing_comma = true

[tool.isort]
profile = "black"
line_length = 120
include_trailing_comma = true
extend_skip = ["georges_core/__init__.py"]

[tool.flake8]
ignore = ['E231', 'E241', 'W503', 'E203']
per-file-ignores = [
    '__init__.py:F401',
]
max-line-length = 120
count = true
exclude = ['docs/**', '.tox/**', '.venv/**']

[tool.pylint]
max-line-length = 120
disable = ['C0103', 'R0914', 'R0913', 'W0707', 'C0302']

[tool.mypy]
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_ignores = true
show_error_codes = true
enable_error_code = "ignore-without-code"
strict = true
# TODO: Remove this once pytest has annotations
disallow_untyped_decorators = false
disable_error_code = "attr-defined"
plugins = "numpy.typing.mypy_plugin"
exclude = ["docs", "tests"]

[tool.poetry]
name = "georges-core"
version = "2023.3"
description = "Georges' accelerator physics library - Core"
authors = ["CÃ©dric Hernalsteens <cedric.hernalsteens@ulb.be>",
           "Robin Tesse <robin.tesse@ulb.be>",
           "Eustache Gnacadja <eustache.gnacadja@ulb.be>",
           "Eliott Ramoisiaux <eliott.ramoisiaux@ulb.be>",
           "Marion Vanwelde <marion.vanwelde@ulb.be>"]

[tool.poetry.dependencies]
python = ">3.9 <3.11"
awkward = "2.5.0"
awkward-pandas = "2023.8.0"
boost-histogram = "1.4.0"
cpymad = "1.14.2"
fastparquet = "2023.10.1"
ipykernel = "6.27.1"
ipyparallel = "8.6.1"
jupyterlab = "4.0.9"
jupyterlab-code-formatter = "2.2.1"
matplotlib = "3.8.2"
mergedeep = "1.3.4"
nbdime = "4.0.1"
numba = "0.56.3" # DO NOT CHANGE THE VERSION (FOR INTEL-MKL)
numpy = "1.22.3" # DO NOT CHANGE THE VERSION (FOR INTEL-MKL)
numpy-quaternion = "2022.4.4"
pandas = "1.5.1" # DO NOT CHANGE THE VERSION (FOR INTEL-MKL)
Pint = "0.22"
plotly = "5.18.0"
pyarrow = "14.0.1"
pybdsim = "3.5.1"
PyYAML = "6.0.1"
scipy = "1.7.3" # DO NOT CHANGE THE VERSION (FOR INTEL-MKL)
uproot = "5.1.2"
vtk = "9.3.0"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = {extras = ["jupyter"], version = "23.11.0"}
coverage = {extras = ["toml"], version = "7.3.2"}
flake8 = "6.1.0"
flake8-pyproject = "1.2.3"
isort = "5.12.0"
mypy = "1.7.1"
pre-commit = "3.5.0"
pylint = "3.0.2"
pytest = "7.4.3"

[tool.poetry.group.docs.dependencies]
cairosvg = "2.7.1"
jupyter-sphinx = "0.4.0"
jupyter-server-mathjax = "0.2.6"
m2r2 =  "0.3.3.post2"
nbsphinx =  "0.9.3"
pandoc =  "2.3"
sphinx = "7.2.6"
sphinx-material =  "0.0.36"
sphinx-automodapi =  "0.16.0"
sphinxcontrib-bibtex =  "2.6.1"
sphinx-copybutton =  "0.5.2"
sphinx-autobuild =  "2021.3.14"
sphinx-rtd-theme = "2.0.0"
sphinxcontrib-svg2pdfconverter = {extras = ["cairosvg"], version = "1.2.2"}

[tool.coverage.run]
branch = true
relative_files = true
source = ["georges_core"]

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    'raise NotImplementedError',
    'except KeyError',
    'if 0:',
    'if __name__ == .__main__.:',
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
    ]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
